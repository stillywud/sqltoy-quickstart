/**
 *@Generated by sagacity-quickvo 4.13
 */
package com.sqltoy.quickstart.vo;

import com.sqltoy.quickstart.vo.base.AbstractDictTypeVO;
import java.util.List;
import org.sagacity.sqltoy.config.annotation.SqlToyEntity;

/**
 * @project sqltoy-showcase
 * @author zhongxuchen
 * @version 1.0.0
 * Table: sqltoy_dict_type,Remark:字典分类表 	
 */
@SqlToyEntity
public class DictTypeVO extends AbstractDictTypeVO {	
	/**
	 * 
	 */
	private static final long serialVersionUID = 7652087330184138442L;
	
	/** default constructor */
	public DictTypeVO() {
		super();
	}
	/*---begin-constructor-area---don't-update-this-area--*/
	/** pk constructor */
	public DictTypeVO(String dictType)
	{
		this.dictType=dictType;
	}

    /**
     * mapping SQLTOY_DICT_DETAIL data to SQLTOY_DICT_TYPE oneToMany List
	 */
	public void mappingDictDetailVOs(List<DictTypeVO> mainSet,List<DictDetailVO> itemSet)
    {
    	if(mainSet==null || mainSet.isEmpty() || itemSet==null||itemSet.isEmpty())
    		return;
    	DictTypeVO main;
    	DictDetailVO item;
    	for(int i=0;i<mainSet.size();i++){
    		main=mainSet.get(i);
    		if(itemSet.size()==0)
    			break;
    		for(int j=0;j<itemSet.size();j++){
    			item=itemSet.get(j);
    			if(main.getDictType().equals(item.getDictType())){
    			   main.dictDetailVOs.add(item);
    			   itemSet.remove(j);
    			   j--;
    			}
    		}
    	}
    }
	/*---end-constructor-area---don't-update-this-area--*/
	/**
     *@todo vo columns to String
     */
    @Override
	public String toString() {
		return super.toString();
	}
	
	/*
	 * (non-Javadoc)
	 * 
	 * @see java.lang.Object#clone()
	 */
	@Override
	public DictTypeVO clone() {
		try {
			return (DictTypeVO) super.clone();
		} catch (CloneNotSupportedException e) {
			e.printStackTrace();
		}
		return null;
	}
	
}
