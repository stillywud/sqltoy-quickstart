/**
 * @Generated by sagacity-quickvo 4.16
 */
package com.sqltoy.quickstart.vo.base;

import java.io.Serializable;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;
import org.sagacity.sqltoy.callback.SelectFields;
import org.sagacity.sqltoy.config.annotation.Column;
import org.sagacity.sqltoy.config.annotation.Entity;
import org.sagacity.sqltoy.config.annotation.Id;

/**
 * @project sqltoy-quickstart
 * @version 1.0.0
 * Table: cgform_ftl  
 */
@Entity(tableName = "cgform_ftl", pk_constraint = "PRIMARY")
public abstract class AbstractCgformFtlVO implements Serializable {

  /**
   *
   */
  private static final long serialVersionUID = 8475681043646549235L;

  /**
   * jdbcType:VARCHAR
   * 主键ID
   */
  @Id(strategy = "generator", generator = "org.sagacity.sqltoy.plugins.id.NanoTimeIdGenerator")
  @Column(name = "ID", length = 32L, type = java.sql.Types.VARCHAR, nullable = false)
  protected String id;

  /**
   * jdbcType:VARCHAR
   * 表单ID
   */
  @Column(name = "CGFORM_ID", length = 36L, type = java.sql.Types.VARCHAR, nullable = false)
  protected String cgformId;

  /**
   * jdbcType:VARCHAR
   * 表单名字
   */
  @Column(name = "CGFORM_NAME", length = 100L, type = java.sql.Types.VARCHAR, nullable = false)
  protected String cgformName;

  /**
   * jdbcType:VARCHAR
   * 创建人
   */
  @Column(name = "CREATE_BY", length = 36L, type = java.sql.Types.VARCHAR, nullable = true)
  protected String createBy;

  /**
   * jdbcType:DATETIME
   * 创建时间
   */
  @Column(name = "CREATE_DATE", length = 19L, type = java.sql.Types.DATE, nullable = true)
  protected LocalDateTime createDate;

  /**
   * jdbcType:VARCHAR
   * 创建人名字
   */
  @Column(name = "CREATE_NAME", length = 32L, type = java.sql.Types.VARCHAR, nullable = true)
  protected String createName;

  /**
   * jdbcType:LONGTEXT
   * 设计模板内容
   */
  @Column(name = "FTL_CONTENT", length = 2147483647L, type = java.sql.Types.VARCHAR, nullable = true)
  protected String ftlContent;

  /**
   * jdbcType:VARCHAR
   * 模板激活状态
   */
  @Column(name = "FTL_STATUS", length = 50L, type = java.sql.Types.VARCHAR, nullable = true)
  protected String ftlStatus;

  /**
   * jdbcType:INT
   * 模板编号
   */
  @Column(name = "FTL_VERSION", length = 10L, type = java.sql.Types.INTEGER, nullable = false)
  protected Integer ftlVersion;

  /**
   * jdbcType:VARCHAR
   * 上传Word路径
   */
  @Column(name = "FTL_WORD_URL", length = 200L, type = java.sql.Types.VARCHAR, nullable = true)
  protected String ftlWordUrl;

  /**
   * jdbcType:VARCHAR
   * 修改人
   */
  @Column(name = "UPDATE_BY", length = 36L, type = java.sql.Types.VARCHAR, nullable = true)
  protected String updateBy;

  /**
   * jdbcType:DATETIME
   * 修改时间
   */
  @Column(name = "UPDATE_DATE", length = 19L, type = java.sql.Types.DATE, nullable = true)
  protected LocalDateTime updateDate;

  /**
   * jdbcType:VARCHAR
   * 修改人名字
   */
  @Column(name = "UPDATE_NAME", length = 32L, type = java.sql.Types.VARCHAR, nullable = true)
  protected String updateName;

  /**
   * jdbcType:VARCHAR
   * 类型
   */
  @Column(name = "editor_type", length = 10L, defaultValue = "1", type = java.sql.Types.VARCHAR, nullable = true)
  protected String editorType;


  /** default constructor */
  public AbstractCgformFtlVO() {
  }

  /** pk constructor */
  public AbstractCgformFtlVO(String id) {
    this.id = id;
  }


  /**
   *@param id the id to set
   */
  public AbstractCgformFtlVO setId(String id) {
    this.id = id;
    return this;
  }

  /**
   *@return the Id
   */
  public String getId() {
    return this.id;
  }

  /**
   *@param cgformId the cgformId to set
   */
  public AbstractCgformFtlVO setCgformId(String cgformId) {
    this.cgformId = cgformId;
    return this;
  }

  /**
   *@return the CgformId
   */
  public String getCgformId() {
    return this.cgformId;
  }

  /**
   *@param cgformName the cgformName to set
   */
  public AbstractCgformFtlVO setCgformName(String cgformName) {
    this.cgformName = cgformName;
    return this;
  }

  /**
   *@return the CgformName
   */
  public String getCgformName() {
    return this.cgformName;
  }

  /**
   *@param createBy the createBy to set
   */
  public AbstractCgformFtlVO setCreateBy(String createBy) {
    this.createBy = createBy;
    return this;
  }

  /**
   *@return the CreateBy
   */
  public String getCreateBy() {
    return this.createBy;
  }

  /**
   *@param createDate the createDate to set
   */
  public AbstractCgformFtlVO setCreateDate(LocalDateTime createDate) {
    this.createDate = createDate;
    return this;
  }

  /**
   *@return the CreateDate
   */
  public LocalDateTime getCreateDate() {
    return this.createDate;
  }

  /**
   *@param createName the createName to set
   */
  public AbstractCgformFtlVO setCreateName(String createName) {
    this.createName = createName;
    return this;
  }

  /**
   *@return the CreateName
   */
  public String getCreateName() {
    return this.createName;
  }

  /**
   *@param ftlContent the ftlContent to set
   */
  public AbstractCgformFtlVO setFtlContent(String ftlContent) {
    this.ftlContent = ftlContent;
    return this;
  }

  /**
   *@return the FtlContent
   */
  public String getFtlContent() {
    return this.ftlContent;
  }

  /**
   *@param ftlStatus the ftlStatus to set
   */
  public AbstractCgformFtlVO setFtlStatus(String ftlStatus) {
    this.ftlStatus = ftlStatus;
    return this;
  }

  /**
   *@return the FtlStatus
   */
  public String getFtlStatus() {
    return this.ftlStatus;
  }

  /**
   *@param ftlVersion the ftlVersion to set
   */
  public AbstractCgformFtlVO setFtlVersion(Integer ftlVersion) {
    this.ftlVersion = ftlVersion;
    return this;
  }

  /**
   *@return the FtlVersion
   */
  public Integer getFtlVersion() {
    return this.ftlVersion;
  }

  /**
   *@param ftlWordUrl the ftlWordUrl to set
   */
  public AbstractCgformFtlVO setFtlWordUrl(String ftlWordUrl) {
    this.ftlWordUrl = ftlWordUrl;
    return this;
  }

  /**
   *@return the FtlWordUrl
   */
  public String getFtlWordUrl() {
    return this.ftlWordUrl;
  }

  /**
   *@param updateBy the updateBy to set
   */
  public AbstractCgformFtlVO setUpdateBy(String updateBy) {
    this.updateBy = updateBy;
    return this;
  }

  /**
   *@return the UpdateBy
   */
  public String getUpdateBy() {
    return this.updateBy;
  }

  /**
   *@param updateDate the updateDate to set
   */
  public AbstractCgformFtlVO setUpdateDate(LocalDateTime updateDate) {
    this.updateDate = updateDate;
    return this;
  }

  /**
   *@return the UpdateDate
   */
  public LocalDateTime getUpdateDate() {
    return this.updateDate;
  }

  /**
   *@param updateName the updateName to set
   */
  public AbstractCgformFtlVO setUpdateName(String updateName) {
    this.updateName = updateName;
    return this;
  }

  /**
   *@return the UpdateName
   */
  public String getUpdateName() {
    return this.updateName;
  }

  /**
   *@param editorType the editorType to set
   */
  public AbstractCgformFtlVO setEditorType(String editorType) {
    this.editorType = editorType;
    return this;
  }

  /**
   *@return the EditorType
   */
  public String getEditorType() {
    return this.editorType;
  }


  /**
   * @todo vo columns to String
   */
  @Override
  public String toString() {
    StringBuilder columnsBuffer = new StringBuilder();
    columnsBuffer.append("id=").append(getId()).append("\n");
    columnsBuffer.append("cgformId=").append(getCgformId()).append("\n");
    columnsBuffer.append("cgformName=").append(getCgformName()).append("\n");
    columnsBuffer.append("createBy=").append(getCreateBy()).append("\n");
    columnsBuffer.append("createDate=").append(getCreateDate()).append("\n");
    columnsBuffer.append("createName=").append(getCreateName()).append("\n");
    columnsBuffer.append("ftlContent=").append(getFtlContent()).append("\n");
    columnsBuffer.append("ftlStatus=").append(getFtlStatus()).append("\n");
    columnsBuffer.append("ftlVersion=").append(getFtlVersion()).append("\n");
    columnsBuffer.append("ftlWordUrl=").append(getFtlWordUrl()).append("\n");
    columnsBuffer.append("updateBy=").append(getUpdateBy()).append("\n");
    columnsBuffer.append("updateDate=").append(getUpdateDate()).append("\n");
    columnsBuffer.append("updateName=").append(getUpdateName()).append("\n");
    columnsBuffer.append("editorType=").append(getEditorType()).append("\n");
    return columnsBuffer.toString();
  }

  /**
   * @TODO create entityQuery fields
   */
  public static SelectFieldsImpl select() {
    return new SelectFieldsImpl();
  }

  public static class SelectFieldsImpl extends SelectFields {

    private List<String> fields = new ArrayList<String>();

    @Override
    public String[] getSelectFields() {
      String[] result = new String[fields.size()];
      fields.toArray(result);
      return result;
    }

    public SelectFieldsImpl id() {
      if (!fields.contains("id")) {
        fields.add("id");
      }
      return this;
    }

    public SelectFieldsImpl cgformId() {
      if (!fields.contains("cgformId")) {
        fields.add("cgformId");
      }
      return this;
    }

    public SelectFieldsImpl cgformName() {
      if (!fields.contains("cgformName")) {
        fields.add("cgformName");
      }
      return this;
    }

    public SelectFieldsImpl createBy() {
      if (!fields.contains("createBy")) {
        fields.add("createBy");
      }
      return this;
    }

    public SelectFieldsImpl createDate() {
      if (!fields.contains("createDate")) {
        fields.add("createDate");
      }
      return this;
    }

    public SelectFieldsImpl createName() {
      if (!fields.contains("createName")) {
        fields.add("createName");
      }
      return this;
    }

    public SelectFieldsImpl ftlContent() {
      if (!fields.contains("ftlContent")) {
        fields.add("ftlContent");
      }
      return this;
    }

    public SelectFieldsImpl ftlStatus() {
      if (!fields.contains("ftlStatus")) {
        fields.add("ftlStatus");
      }
      return this;
    }

    public SelectFieldsImpl ftlVersion() {
      if (!fields.contains("ftlVersion")) {
        fields.add("ftlVersion");
      }
      return this;
    }

    public SelectFieldsImpl ftlWordUrl() {
      if (!fields.contains("ftlWordUrl")) {
        fields.add("ftlWordUrl");
      }
      return this;
    }

    public SelectFieldsImpl updateBy() {
      if (!fields.contains("updateBy")) {
        fields.add("updateBy");
      }
      return this;
    }

    public SelectFieldsImpl updateDate() {
      if (!fields.contains("updateDate")) {
        fields.add("updateDate");
      }
      return this;
    }

    public SelectFieldsImpl updateName() {
      if (!fields.contains("updateName")) {
        fields.add("updateName");
      }
      return this;
    }

    public SelectFieldsImpl editorType() {
      if (!fields.contains("editorType")) {
        fields.add("editorType");
      }
      return this;
    }

  }

  public static class Fields {

    /**
     * 主键ID
     */
    public static String id = "id";

    /**
     * 表单ID
     */
    public static String cgformId = "cgformId";

    /**
     * 表单名字
     */
    public static String cgformName = "cgformName";

    /**
     * 创建人
     */
    public static String createBy = "createBy";

    /**
     * 创建时间
     */
    public static String createDate = "createDate";

    /**
     * 创建人名字
     */
    public static String createName = "createName";

    /**
     * 设计模板内容
     */
    public static String ftlContent = "ftlContent";

    /**
     * 模板激活状态
     */
    public static String ftlStatus = "ftlStatus";

    /**
     * 模板编号
     */
    public static String ftlVersion = "ftlVersion";

    /**
     * 上传Word路径
     */
    public static String ftlWordUrl = "ftlWordUrl";

    /**
     * 修改人
     */
    public static String updateBy = "updateBy";

    /**
     * 修改时间
     */
    public static String updateDate = "updateDate";

    /**
     * 修改人名字
     */
    public static String updateName = "updateName";

    /**
     * 类型
     */
    public static String editorType = "editorType";

  }
}
