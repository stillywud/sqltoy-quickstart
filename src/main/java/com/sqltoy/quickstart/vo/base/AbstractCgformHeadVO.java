/**
 * @Generated by sagacity-quickvo 4.16
 */
package com.sqltoy.quickstart.vo.base;

import java.io.Serializable;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;
import org.sagacity.sqltoy.callback.SelectFields;
import org.sagacity.sqltoy.config.annotation.Column;
import org.sagacity.sqltoy.config.annotation.Entity;
import org.sagacity.sqltoy.config.annotation.Id;

/**
 * @project sqltoy-quickstart
 * @version 1.0.0
 * Table: cgform_head  
 */
@Entity(tableName = "cgform_head", pk_constraint = "PRIMARY")
public abstract class AbstractCgformHeadVO implements Serializable {


  /**
   *
   */
  private static final long serialVersionUID = 6495288466020878629L;

  /**
   * jdbcType:VARCHAR
   * 主键ID
   */
  @Id(strategy = "generator", generator = "org.sagacity.sqltoy.plugins.id.NanoTimeIdGenerator")
  @Column(name = "id", length = 32L, type = java.sql.Types.VARCHAR, nullable = false)
  protected String id;

  /**
   * jdbcType:VARCHAR
   * 表描述
   */
  @Column(name = "content", length = 200L, type = java.sql.Types.VARCHAR, nullable = false)
  protected String content;

  /**
   * jdbcType:VARCHAR
   * 创建人
   */
  @Column(name = "create_by", length = 32L, type = java.sql.Types.VARCHAR, nullable = true)
  protected String createBy;

  /**
   * jdbcType:DATETIME
   * 创建时间
   */
  @Column(name = "create_date", length = 19L, type = java.sql.Types.DATE, nullable = true)
  protected LocalDateTime createDate;

  /**
   * jdbcType:VARCHAR
   * 创建人名称
   */
  @Column(name = "create_name", length = 32L, type = java.sql.Types.VARCHAR, nullable = true)
  protected String createName;

  /**
   * jdbcType:VARCHAR
   * 是否带checkbox
   */
  @Column(name = "is_checkbox", length = 5L, type = java.sql.Types.VARCHAR, nullable = false)
  protected String isCheckbox;

  /**
   * jdbcType:VARCHAR
   * 同步数据库状态
   */
  @Column(name = "is_dbsynch", length = 20L, type = java.sql.Types.VARCHAR, nullable = false)
  protected String isDbsynch;

  /**
   * jdbcType:VARCHAR
   * 是否分页
   */
  @Column(name = "is_pagination", length = 5L, type = java.sql.Types.VARCHAR, nullable = false)
  protected String isPagination;

  /**
   * jdbcType:VARCHAR
   * 是否是树
   */
  @Column(name = "is_tree", length = 5L, type = java.sql.Types.VARCHAR, nullable = false)
  protected String isTree;

  /**
   * jdbcType:VARCHAR
   * 主键生成序列
   */
  @Column(name = "jform_pk_sequence", length = 200L, type = java.sql.Types.VARCHAR, nullable = true)
  protected String jformPkSequence;

  /**
   * jdbcType:VARCHAR
   * 主键类型
   */
  @Column(name = "jform_pk_type", length = 100L, type = java.sql.Types.VARCHAR, nullable = true)
  protected String jformPkType;

  /**
   * jdbcType:INT
   * 表类型:单表、主表、附表
   */
  @Column(name = "jform_type", length = 10L, type = java.sql.Types.INTEGER, nullable = false)
  protected Integer jformType;

  /**
   * jdbcType:VARCHAR
   * 表单版本号
   */
  @Column(name = "jform_version", length = 10L, type = java.sql.Types.VARCHAR, nullable = false)
  protected String jformVersion;

  /**
   * jdbcType:VARCHAR
   * 查询模式
   */
  @Column(name = "querymode", length = 10L, type = java.sql.Types.VARCHAR, nullable = false)
  protected String querymode;

  /**
   * jdbcType:INT
   *
   */
  @Column(name = "relation_type", length = 10L, type = java.sql.Types.INTEGER, nullable = true)
  protected Integer relationType;

  /**
   * jdbcType:VARCHAR
   * 子表
   */
  @Column(name = "sub_table_str", length = 1000L, type = java.sql.Types.VARCHAR, nullable = true)
  protected String subTableStr;

  /**
   * jdbcType:INT
   * 附表排序序号
   */
  @Column(name = "tab_order", length = 10L, type = java.sql.Types.INTEGER, nullable = true)
  protected Integer tabOrder;

  /**
   * jdbcType:VARCHAR
   * 表名
   */
  @Column(name = "table_name", length = 50L, type = java.sql.Types.VARCHAR, nullable = false)
  protected String tableName;

  /**
   * jdbcType:VARCHAR
   * 修改人
   */
  @Column(name = "update_by", length = 32L, type = java.sql.Types.VARCHAR, nullable = true)
  protected String updateBy;

  /**
   * jdbcType:DATETIME
   * 修改时间
   */
  @Column(name = "update_date", length = 19L, type = java.sql.Types.DATE, nullable = true)
  protected LocalDateTime updateDate;

  /**
   * jdbcType:VARCHAR
   * 修改人名字
   */
  @Column(name = "update_name", length = 32L, type = java.sql.Types.VARCHAR, nullable = true)
  protected String updateName;

  /**
   * jdbcType:VARCHAR
   * 树形表单父id
   */
  @Column(name = "tree_parentid_fieldname", length = 50L, type = java.sql.Types.VARCHAR, nullable = true)
  protected String treeParentidFieldname;

  /**
   * jdbcType:VARCHAR
   * 树表主键字段
   */
  @Column(name = "tree_id_fieldname", length = 50L, type = java.sql.Types.VARCHAR, nullable = true)
  protected String treeIdFieldname;

  /**
   * jdbcType:VARCHAR
   * 树开表单列字段
   */
  @Column(name = "tree_fieldname", length = 50L, type = java.sql.Types.VARCHAR, nullable = true)
  protected String treeFieldname;

  /**
   * jdbcType:VARCHAR
   * 表单分类
   */
  @Column(name = "jform_category", length = 50L, defaultValue = "bdfl_ptbd", type = java.sql.Types.VARCHAR, nullable = false)
  protected String jformCategory;

  /**
   * jdbcType:VARCHAR
   * PC表单模板
   */
  @Column(name = "form_template", length = 50L, type = java.sql.Types.VARCHAR, nullable = true)
  protected String formTemplate;

  /**
   * jdbcType:VARCHAR
   * 表单模板样式(移动端)
   */
  @Column(name = "form_template_mobile", length = 50L, type = java.sql.Types.VARCHAR, nullable = true)
  protected String formTemplateMobile;

  /**
   * jdbcType:VARCHAR
   * '0'为物理表，‘1’为配置表
   */
  @Column(name = "table_type", length = 50L, type = java.sql.Types.VARCHAR, nullable = true)
  protected String tableType;

  /**
   * jdbcType:INT
   * 表版本
   */
  @Column(name = "table_version", length = 10L, type = java.sql.Types.INTEGER, nullable = true)
  protected Integer tableVersion;

  /**
   * jdbcType:VARCHAR
   * 物理表id(配置表用)
   */
  @Column(name = "physice_id", length = 32L, type = java.sql.Types.VARCHAR, nullable = true)
  protected String physiceId;

  /**
   * jdbcType:VARCHAR
   *
   */
  @Column(name = "db_key", length = 30L, type = java.sql.Types.VARCHAR, nullable = true)
  protected String dbKey;

  /**
   * jdbcType:VARCHAR
   *
   */
  @Column(name = "sort_sql", length = 200L, type = java.sql.Types.VARCHAR, nullable = true)
  protected String sortSql;

  /**
   * jdbcType:VARCHAR
   *
   */
  @Column(name = "primary_key", length = 200L, type = java.sql.Types.VARCHAR, nullable = false)
  protected String primaryKey;

  /**
   * jdbcType:VARCHAR
   *
   */
  @Column(name = "physical_type", length = 10L, type = java.sql.Types.VARCHAR, nullable = true)
  protected String physicalType;

  /**
   * jdbcType:VARCHAR
   *
   */
  @Column(name = "extend_json", length = 500L, type = java.sql.Types.VARCHAR, nullable = true)
  protected String extendJson;


  /** default constructor */
  public AbstractCgformHeadVO() {
  }

  /** pk constructor */
  public AbstractCgformHeadVO(String id) {
    this.id = id;
  }


  /**
   *@param id the id to set
   */
  public AbstractCgformHeadVO setId(String id) {
    this.id = id;
    return this;
  }

  /**
   *@return the Id
   */
  public String getId() {
    return this.id;
  }

  /**
   *@param content the content to set
   */
  public AbstractCgformHeadVO setContent(String content) {
    this.content = content;
    return this;
  }

  /**
   *@return the Content
   */
  public String getContent() {
    return this.content;
  }

  /**
   *@param createBy the createBy to set
   */
  public AbstractCgformHeadVO setCreateBy(String createBy) {
    this.createBy = createBy;
    return this;
  }

  /**
   *@return the CreateBy
   */
  public String getCreateBy() {
    return this.createBy;
  }

  /**
   *@param createDate the createDate to set
   */
  public AbstractCgformHeadVO setCreateDate(LocalDateTime createDate) {
    this.createDate = createDate;
    return this;
  }

  /**
   *@return the CreateDate
   */
  public LocalDateTime getCreateDate() {
    return this.createDate;
  }

  /**
   *@param createName the createName to set
   */
  public AbstractCgformHeadVO setCreateName(String createName) {
    this.createName = createName;
    return this;
  }

  /**
   *@return the CreateName
   */
  public String getCreateName() {
    return this.createName;
  }

  /**
   *@param isCheckbox the isCheckbox to set
   */
  public AbstractCgformHeadVO setIsCheckbox(String isCheckbox) {
    this.isCheckbox = isCheckbox;
    return this;
  }

  /**
   *@return the IsCheckbox
   */
  public String getIsCheckbox() {
    return this.isCheckbox;
  }

  /**
   *@param isDbsynch the isDbsynch to set
   */
  public AbstractCgformHeadVO setIsDbsynch(String isDbsynch) {
    this.isDbsynch = isDbsynch;
    return this;
  }

  /**
   *@return the IsDbsynch
   */
  public String getIsDbsynch() {
    return this.isDbsynch;
  }

  /**
   *@param isPagination the isPagination to set
   */
  public AbstractCgformHeadVO setIsPagination(String isPagination) {
    this.isPagination = isPagination;
    return this;
  }

  /**
   *@return the IsPagination
   */
  public String getIsPagination() {
    return this.isPagination;
  }

  /**
   *@param isTree the isTree to set
   */
  public AbstractCgformHeadVO setIsTree(String isTree) {
    this.isTree = isTree;
    return this;
  }

  /**
   *@return the IsTree
   */
  public String getIsTree() {
    return this.isTree;
  }

  /**
   *@param jformPkSequence the jformPkSequence to set
   */
  public AbstractCgformHeadVO setJformPkSequence(String jformPkSequence) {
    this.jformPkSequence = jformPkSequence;
    return this;
  }

  /**
   *@return the JformPkSequence
   */
  public String getJformPkSequence() {
    return this.jformPkSequence;
  }

  /**
   *@param jformPkType the jformPkType to set
   */
  public AbstractCgformHeadVO setJformPkType(String jformPkType) {
    this.jformPkType = jformPkType;
    return this;
  }

  /**
   *@return the JformPkType
   */
  public String getJformPkType() {
    return this.jformPkType;
  }

  /**
   *@param jformType the jformType to set
   */
  public AbstractCgformHeadVO setJformType(Integer jformType) {
    this.jformType = jformType;
    return this;
  }

  /**
   *@return the JformType
   */
  public Integer getJformType() {
    return this.jformType;
  }

  /**
   *@param jformVersion the jformVersion to set
   */
  public AbstractCgformHeadVO setJformVersion(String jformVersion) {
    this.jformVersion = jformVersion;
    return this;
  }

  /**
   *@return the JformVersion
   */
  public String getJformVersion() {
    return this.jformVersion;
  }

  /**
   *@param querymode the querymode to set
   */
  public AbstractCgformHeadVO setQuerymode(String querymode) {
    this.querymode = querymode;
    return this;
  }

  /**
   *@return the Querymode
   */
  public String getQuerymode() {
    return this.querymode;
  }

  /**
   *@param relationType the relationType to set
   */
  public AbstractCgformHeadVO setRelationType(Integer relationType) {
    this.relationType = relationType;
    return this;
  }

  /**
   *@return the RelationType
   */
  public Integer getRelationType() {
    return this.relationType;
  }

  /**
   *@param subTableStr the subTableStr to set
   */
  public AbstractCgformHeadVO setSubTableStr(String subTableStr) {
    this.subTableStr = subTableStr;
    return this;
  }

  /**
   *@return the SubTableStr
   */
  public String getSubTableStr() {
    return this.subTableStr;
  }

  /**
   *@param tabOrder the tabOrder to set
   */
  public AbstractCgformHeadVO setTabOrder(Integer tabOrder) {
    this.tabOrder = tabOrder;
    return this;
  }

  /**
   *@return the TabOrder
   */
  public Integer getTabOrder() {
    return this.tabOrder;
  }

  /**
   *@param tableName the tableName to set
   */
  public AbstractCgformHeadVO setTableName(String tableName) {
    this.tableName = tableName;
    return this;
  }

  /**
   *@return the TableName
   */
  public String getTableName() {
    return this.tableName;
  }

  /**
   *@param updateBy the updateBy to set
   */
  public AbstractCgformHeadVO setUpdateBy(String updateBy) {
    this.updateBy = updateBy;
    return this;
  }

  /**
   *@return the UpdateBy
   */
  public String getUpdateBy() {
    return this.updateBy;
  }

  /**
   *@param updateDate the updateDate to set
   */
  public AbstractCgformHeadVO setUpdateDate(LocalDateTime updateDate) {
    this.updateDate = updateDate;
    return this;
  }

  /**
   *@return the UpdateDate
   */
  public LocalDateTime getUpdateDate() {
    return this.updateDate;
  }

  /**
   *@param updateName the updateName to set
   */
  public AbstractCgformHeadVO setUpdateName(String updateName) {
    this.updateName = updateName;
    return this;
  }

  /**
   *@return the UpdateName
   */
  public String getUpdateName() {
    return this.updateName;
  }

  /**
   *@param treeParentidFieldname the treeParentidFieldname to set
   */
  public AbstractCgformHeadVO setTreeParentidFieldname(String treeParentidFieldname) {
    this.treeParentidFieldname = treeParentidFieldname;
    return this;
  }

  /**
   *@return the TreeParentidFieldname
   */
  public String getTreeParentidFieldname() {
    return this.treeParentidFieldname;
  }

  /**
   *@param treeIdFieldname the treeIdFieldname to set
   */
  public AbstractCgformHeadVO setTreeIdFieldname(String treeIdFieldname) {
    this.treeIdFieldname = treeIdFieldname;
    return this;
  }

  /**
   *@return the TreeIdFieldname
   */
  public String getTreeIdFieldname() {
    return this.treeIdFieldname;
  }

  /**
   *@param treeFieldname the treeFieldname to set
   */
  public AbstractCgformHeadVO setTreeFieldname(String treeFieldname) {
    this.treeFieldname = treeFieldname;
    return this;
  }

  /**
   *@return the TreeFieldname
   */
  public String getTreeFieldname() {
    return this.treeFieldname;
  }

  /**
   *@param jformCategory the jformCategory to set
   */
  public AbstractCgformHeadVO setJformCategory(String jformCategory) {
    this.jformCategory = jformCategory;
    return this;
  }

  /**
   *@return the JformCategory
   */
  public String getJformCategory() {
    return this.jformCategory;
  }

  /**
   *@param formTemplate the formTemplate to set
   */
  public AbstractCgformHeadVO setFormTemplate(String formTemplate) {
    this.formTemplate = formTemplate;
    return this;
  }

  /**
   *@return the FormTemplate
   */
  public String getFormTemplate() {
    return this.formTemplate;
  }

  /**
   *@param formTemplateMobile the formTemplateMobile to set
   */
  public AbstractCgformHeadVO setFormTemplateMobile(String formTemplateMobile) {
    this.formTemplateMobile = formTemplateMobile;
    return this;
  }

  /**
   *@return the FormTemplateMobile
   */
  public String getFormTemplateMobile() {
    return this.formTemplateMobile;
  }

  /**
   *@param tableType the tableType to set
   */
  public AbstractCgformHeadVO setTableType(String tableType) {
    this.tableType = tableType;
    return this;
  }

  /**
   *@return the TableType
   */
  public String getTableType() {
    return this.tableType;
  }

  /**
   *@param tableVersion the tableVersion to set
   */
  public AbstractCgformHeadVO setTableVersion(Integer tableVersion) {
    this.tableVersion = tableVersion;
    return this;
  }

  /**
   *@return the TableVersion
   */
  public Integer getTableVersion() {
    return this.tableVersion;
  }

  /**
   *@param physiceId the physiceId to set
   */
  public AbstractCgformHeadVO setPhysiceId(String physiceId) {
    this.physiceId = physiceId;
    return this;
  }

  /**
   *@return the PhysiceId
   */
  public String getPhysiceId() {
    return this.physiceId;
  }

  /**
   *@param dbKey the dbKey to set
   */
  public AbstractCgformHeadVO setDbKey(String dbKey) {
    this.dbKey = dbKey;
    return this;
  }

  /**
   *@return the DbKey
   */
  public String getDbKey() {
    return this.dbKey;
  }

  /**
   *@param sortSql the sortSql to set
   */
  public AbstractCgformHeadVO setSortSql(String sortSql) {
    this.sortSql = sortSql;
    return this;
  }

  /**
   *@return the SortSql
   */
  public String getSortSql() {
    return this.sortSql;
  }

  /**
   *@param primaryKey the primaryKey to set
   */
  public AbstractCgformHeadVO setPrimaryKey(String primaryKey) {
    this.primaryKey = primaryKey;
    return this;
  }

  /**
   *@return the PrimaryKey
   */
  public String getPrimaryKey() {
    return this.primaryKey;
  }

  /**
   *@param physicalType the physicalType to set
   */
  public AbstractCgformHeadVO setPhysicalType(String physicalType) {
    this.physicalType = physicalType;
    return this;
  }

  /**
   *@return the PhysicalType
   */
  public String getPhysicalType() {
    return this.physicalType;
  }

  /**
   *@param extendJson the extendJson to set
   */
  public AbstractCgformHeadVO setExtendJson(String extendJson) {
    this.extendJson = extendJson;
    return this;
  }

  /**
   *@return the ExtendJson
   */
  public String getExtendJson() {
    return this.extendJson;
  }


  /**
   * @todo vo columns to String
   */
  @Override
  public String toString() {
    StringBuilder columnsBuffer = new StringBuilder();
    columnsBuffer.append("id=").append(getId()).append("\n");
    columnsBuffer.append("content=").append(getContent()).append("\n");
    columnsBuffer.append("createBy=").append(getCreateBy()).append("\n");
    columnsBuffer.append("createDate=").append(getCreateDate()).append("\n");
    columnsBuffer.append("createName=").append(getCreateName()).append("\n");
    columnsBuffer.append("isCheckbox=").append(getIsCheckbox()).append("\n");
    columnsBuffer.append("isDbsynch=").append(getIsDbsynch()).append("\n");
    columnsBuffer.append("isPagination=").append(getIsPagination()).append("\n");
    columnsBuffer.append("isTree=").append(getIsTree()).append("\n");
    columnsBuffer.append("jformPkSequence=").append(getJformPkSequence()).append("\n");
    columnsBuffer.append("jformPkType=").append(getJformPkType()).append("\n");
    columnsBuffer.append("jformType=").append(getJformType()).append("\n");
    columnsBuffer.append("jformVersion=").append(getJformVersion()).append("\n");
    columnsBuffer.append("querymode=").append(getQuerymode()).append("\n");
    columnsBuffer.append("relationType=").append(getRelationType()).append("\n");
    columnsBuffer.append("subTableStr=").append(getSubTableStr()).append("\n");
    columnsBuffer.append("tabOrder=").append(getTabOrder()).append("\n");
    columnsBuffer.append("tableName=").append(getTableName()).append("\n");
    columnsBuffer.append("updateBy=").append(getUpdateBy()).append("\n");
    columnsBuffer.append("updateDate=").append(getUpdateDate()).append("\n");
    columnsBuffer.append("updateName=").append(getUpdateName()).append("\n");
    columnsBuffer.append("treeParentidFieldname=").append(getTreeParentidFieldname()).append("\n");
    columnsBuffer.append("treeIdFieldname=").append(getTreeIdFieldname()).append("\n");
    columnsBuffer.append("treeFieldname=").append(getTreeFieldname()).append("\n");
    columnsBuffer.append("jformCategory=").append(getJformCategory()).append("\n");
    columnsBuffer.append("formTemplate=").append(getFormTemplate()).append("\n");
    columnsBuffer.append("formTemplateMobile=").append(getFormTemplateMobile()).append("\n");
    columnsBuffer.append("tableType=").append(getTableType()).append("\n");
    columnsBuffer.append("tableVersion=").append(getTableVersion()).append("\n");
    columnsBuffer.append("physiceId=").append(getPhysiceId()).append("\n");
    columnsBuffer.append("dbKey=").append(getDbKey()).append("\n");
    columnsBuffer.append("sortSql=").append(getSortSql()).append("\n");
    columnsBuffer.append("primaryKey=").append(getPrimaryKey()).append("\n");
    columnsBuffer.append("physicalType=").append(getPhysicalType()).append("\n");
    columnsBuffer.append("extendJson=").append(getExtendJson()).append("\n");
    return columnsBuffer.toString();
  }

  /**
   * @TODO create entityQuery fields
   */
  public static SelectFieldsImpl select() {
    return new SelectFieldsImpl();
  }

  public static class SelectFieldsImpl extends SelectFields {

    private List<String> fields = new ArrayList<String>();

    @Override
    public String[] getSelectFields() {
      String[] result = new String[fields.size()];
      fields.toArray(result);
      return result;
    }

    public SelectFieldsImpl id() {
      if (!fields.contains("id")) {
        fields.add("id");
      }
      return this;
    }

    public SelectFieldsImpl content() {
      if (!fields.contains("content")) {
        fields.add("content");
      }
      return this;
    }

    public SelectFieldsImpl createBy() {
      if (!fields.contains("createBy")) {
        fields.add("createBy");
      }
      return this;
    }

    public SelectFieldsImpl createDate() {
      if (!fields.contains("createDate")) {
        fields.add("createDate");
      }
      return this;
    }

    public SelectFieldsImpl createName() {
      if (!fields.contains("createName")) {
        fields.add("createName");
      }
      return this;
    }

    public SelectFieldsImpl isCheckbox() {
      if (!fields.contains("isCheckbox")) {
        fields.add("isCheckbox");
      }
      return this;
    }

    public SelectFieldsImpl isDbsynch() {
      if (!fields.contains("isDbsynch")) {
        fields.add("isDbsynch");
      }
      return this;
    }

    public SelectFieldsImpl isPagination() {
      if (!fields.contains("isPagination")) {
        fields.add("isPagination");
      }
      return this;
    }

    public SelectFieldsImpl isTree() {
      if (!fields.contains("isTree")) {
        fields.add("isTree");
      }
      return this;
    }

    public SelectFieldsImpl jformPkSequence() {
      if (!fields.contains("jformPkSequence")) {
        fields.add("jformPkSequence");
      }
      return this;
    }

    public SelectFieldsImpl jformPkType() {
      if (!fields.contains("jformPkType")) {
        fields.add("jformPkType");
      }
      return this;
    }

    public SelectFieldsImpl jformType() {
      if (!fields.contains("jformType")) {
        fields.add("jformType");
      }
      return this;
    }

    public SelectFieldsImpl jformVersion() {
      if (!fields.contains("jformVersion")) {
        fields.add("jformVersion");
      }
      return this;
    }

    public SelectFieldsImpl querymode() {
      if (!fields.contains("querymode")) {
        fields.add("querymode");
      }
      return this;
    }

    public SelectFieldsImpl relationType() {
      if (!fields.contains("relationType")) {
        fields.add("relationType");
      }
      return this;
    }

    public SelectFieldsImpl subTableStr() {
      if (!fields.contains("subTableStr")) {
        fields.add("subTableStr");
      }
      return this;
    }

    public SelectFieldsImpl tabOrder() {
      if (!fields.contains("tabOrder")) {
        fields.add("tabOrder");
      }
      return this;
    }

    public SelectFieldsImpl tableName() {
      if (!fields.contains("tableName")) {
        fields.add("tableName");
      }
      return this;
    }

    public SelectFieldsImpl updateBy() {
      if (!fields.contains("updateBy")) {
        fields.add("updateBy");
      }
      return this;
    }

    public SelectFieldsImpl updateDate() {
      if (!fields.contains("updateDate")) {
        fields.add("updateDate");
      }
      return this;
    }

    public SelectFieldsImpl updateName() {
      if (!fields.contains("updateName")) {
        fields.add("updateName");
      }
      return this;
    }

    public SelectFieldsImpl treeParentidFieldname() {
      if (!fields.contains("treeParentidFieldname")) {
        fields.add("treeParentidFieldname");
      }
      return this;
    }

    public SelectFieldsImpl treeIdFieldname() {
      if (!fields.contains("treeIdFieldname")) {
        fields.add("treeIdFieldname");
      }
      return this;
    }

    public SelectFieldsImpl treeFieldname() {
      if (!fields.contains("treeFieldname")) {
        fields.add("treeFieldname");
      }
      return this;
    }

    public SelectFieldsImpl jformCategory() {
      if (!fields.contains("jformCategory")) {
        fields.add("jformCategory");
      }
      return this;
    }

    public SelectFieldsImpl formTemplate() {
      if (!fields.contains("formTemplate")) {
        fields.add("formTemplate");
      }
      return this;
    }

    public SelectFieldsImpl formTemplateMobile() {
      if (!fields.contains("formTemplateMobile")) {
        fields.add("formTemplateMobile");
      }
      return this;
    }

    public SelectFieldsImpl tableType() {
      if (!fields.contains("tableType")) {
        fields.add("tableType");
      }
      return this;
    }

    public SelectFieldsImpl tableVersion() {
      if (!fields.contains("tableVersion")) {
        fields.add("tableVersion");
      }
      return this;
    }

    public SelectFieldsImpl physiceId() {
      if (!fields.contains("physiceId")) {
        fields.add("physiceId");
      }
      return this;
    }

    public SelectFieldsImpl dbKey() {
      if (!fields.contains("dbKey")) {
        fields.add("dbKey");
      }
      return this;
    }

    public SelectFieldsImpl sortSql() {
      if (!fields.contains("sortSql")) {
        fields.add("sortSql");
      }
      return this;
    }

    public SelectFieldsImpl primaryKey() {
      if (!fields.contains("primaryKey")) {
        fields.add("primaryKey");
      }
      return this;
    }

    public SelectFieldsImpl physicalType() {
      if (!fields.contains("physicalType")) {
        fields.add("physicalType");
      }
      return this;
    }

    public SelectFieldsImpl extendJson() {
      if (!fields.contains("extendJson")) {
        fields.add("extendJson");
      }
      return this;
    }

  }

  public static class Fields {

    /**
     * 主键ID
     */
    public static String id = "id";

    /**
     * 表描述
     */
    public static String content = "content";

    /**
     * 创建人
     */
    public static String createBy = "createBy";

    /**
     * 创建时间
     */
    public static String createDate = "createDate";

    /**
     * 创建人名称
     */
    public static String createName = "createName";

    /**
     * 是否带checkbox
     */
    public static String isCheckbox = "isCheckbox";

    /**
     * 同步数据库状态
     */
    public static String isDbsynch = "isDbsynch";

    /**
     * 是否分页
     */
    public static String isPagination = "isPagination";

    /**
     * 是否是树
     */
    public static String isTree = "isTree";

    /**
     * 主键生成序列
     */
    public static String jformPkSequence = "jformPkSequence";

    /**
     * 主键类型
     */
    public static String jformPkType = "jformPkType";

    /**
     * 表类型:单表、主表、附表
     */
    public static String jformType = "jformType";

    /**
     * 表单版本号
     */
    public static String jformVersion = "jformVersion";

    /**
     * 查询模式
     */
    public static String querymode = "querymode";

    /**
     *
     */
    public static String relationType = "relationType";

    /**
     * 子表
     */
    public static String subTableStr = "subTableStr";

    /**
     * 附表排序序号
     */
    public static String tabOrder = "tabOrder";

    /**
     * 表名
     */
    public static String tableName = "tableName";

    /**
     * 修改人
     */
    public static String updateBy = "updateBy";

    /**
     * 修改时间
     */
    public static String updateDate = "updateDate";

    /**
     * 修改人名字
     */
    public static String updateName = "updateName";

    /**
     * 树形表单父id
     */
    public static String treeParentidFieldname = "treeParentidFieldname";

    /**
     * 树表主键字段
     */
    public static String treeIdFieldname = "treeIdFieldname";

    /**
     * 树开表单列字段
     */
    public static String treeFieldname = "treeFieldname";

    /**
     * 表单分类
     */
    public static String jformCategory = "jformCategory";

    /**
     * PC表单模板
     */
    public static String formTemplate = "formTemplate";

    /**
     * 表单模板样式(移动端)
     */
    public static String formTemplateMobile = "formTemplateMobile";

    /**
     * '0'为物理表，‘1’为配置表
     */
    public static String tableType = "tableType";

    /**
     * 表版本
     */
    public static String tableVersion = "tableVersion";

    /**
     * 物理表id(配置表用)
     */
    public static String physiceId = "physiceId";

    /**
     *
     */
    public static String dbKey = "dbKey";

    /**
     *
     */
    public static String sortSql = "sortSql";

    /**
     *
     */
    public static String primaryKey = "primaryKey";

    /**
     *
     */
    public static String physicalType = "physicalType";

    /**
     *
     */
    public static String extendJson = "extendJson";

  }
}
